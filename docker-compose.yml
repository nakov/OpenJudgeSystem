version: '3.8'

services:
  ui:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.ui
    image: judge_web_ui
    container_name: web_ui_instance
    ports:
      - "5010:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
    env_file:
      - Docker/envs/common.env
    extra_hosts:
      - "db:host-gateway"
    depends_on:
      - mq
      - redis
  fe:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.fe
      args:
        - YARN_BUILD_COMMAND=build:local
    image: judge_web_fe
    container_name: web_fe_instance
    ports:
      - "5002:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
      - .:/app
      - /app/node_modules
    depends_on:
      - ui
  administration:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.administration
    image: judge_administration
    container_name: administration_instance
    ports:
      - "5001:80"
    restart: on-failure
    volumes:
      - ./Logs:/Logs
    env_file:
      - Docker/envs/common.env
    extra_hosts:
      - "db:host-gateway"
    depends_on:
      - mq
      - redis
  worker:
    build:
      context: .
      dockerfile: ./Docker/Dockerfile.worker
    image: judge_worker
    ports:
      - "8003:80"
    container_name: worker_instance
    restart: on-failure
    env_file:
      - Docker/envs/common.env
      - Docker/envs/worker.env
    volumes:
      - /tmp/ExecutionStrategies:/tmp/ExecutionStrategies
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - default
      - ojs_workers
    depends_on:
      - mq
      - sql_server
      - mysql
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"

# External services
  mq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    container_name: mq_instance
    hostname: "judge-mq"
    environment:
      DEFAULT_USER_PASSWORD: myS3cretPass2
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
  redis:
    image: "redis:7"
    ports:
      - "6379:6379"
    container_name: redis_instance
    hostname: "judge-rd"
    command: "redis-server --requirepass redisPass123"
## Worker dependencies
  sql_server:
    image: mcr.microsoft.com/mssql/server:2017-CU8-ubuntu
    restart: always
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: 1123QwER
    networks:
      - ojs_workers
  mysql:
    image: mysql/mysql-server:8.0.19
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1123QwER
      MYSQL_ROOT_HOST: '%'
    networks:
      - ojs_workers
  postgres:
      image: postgres:15
      restart: always
      environment:
        POSTGRES_PASSWORD: 1123QwER
        POSTGRES_USER: postgres
      networks:
        - ojs_workers
# Monitoring
  loki:
    image: grafana/loki:3.1.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  rabbitmq_data:
  loki_data:
  grafana_data:
networks:
  ojs_workers:
    driver: bridge
    name: 'ojs_workers'